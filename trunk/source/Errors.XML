<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>

<!--
	This file specifies error messages for the Paco compiler
-->

<Errors>    
    <Error code="0">undeclared identifier</Error>
    <Error code="1">multiply defined identifier</Error>
    <Error code="2">illegal character in number</Error>
    <Error code="3">illegal character in string</Error>
    <Error code="4">identifier does not match procedure name</Error>
    <Error code="5">comment not closed</Error>
    <Error code="6"></Error>
    <Error code="7"></Error>
    <Error code="8"></Error>
    <Error code="9">"=" expected</Error>
    <Error code="10"></Error>
    <Error code="11"></Error>
    <Error code="12">type definition starts with incorrect symbol</Error>
    <Error code="13">value starts with incorrect symbol</Error>
    <Error code="14">statement starts with incorrect symbol</Error>
    <Error code="15">declaration followed by incorrect symbol</Error>
    <Error code="16">MODULE expected</Error>
    <Error code="17"></Error>
    <Error code="18">"." missing</Error>
    <Error code="19">"," missing</Error>
    <Error code="20">":" missing</Error>
    <Error code="21"></Error>
    <Error code="22">")" missing</Error>
    <Error code="23">"]" missing</Error>
    <Error code="24">"}" missing</Error>
    <Error code="25">OF missing</Error>
    <Error code="26">THEN missing</Error>
    <Error code="27">DO missing</Error>
    <Error code="28">TO missing</Error>
    <Error code="29"></Error>
    <Error code="30">"(" missing</Error>
    <Error code="31"></Error>
    <Error code="32"></Error>
    <Error code="33"></Error>
    <Error code="34">":=" missing</Error>
    <Error code="35">"," or OF expected</Error>
    <Error code="36"></Error>
    <Error code="37"></Error>
    <Error code="38">EXIT not within loop statement</Error>
    <Error code="39"></Error>
    <Error code="40">identifier expected</Error>
    <Error code="41">";" missing</Error>
    <Error code="42"></Error>
    <Error code="43">END missing</Error>
    <Error code="44"></Error>
    <Error code="45"></Error>
    <Error code="46">UNTIL missing</Error>
    <Error code="47">illegally marked identifier</Error>
    <Error code="48"></Error>
    <Error code="49"></Error>
    <Error code="50">expression should be constant</Error>
    <Error code="51">constant not an integer</Error>
    <Error code="52">identifier does not denote a type</Error>
    <Error code="53">identifier does not denote a record type</Error>
    <Error code="54">result type of procedure is not a basic type</Error>
    <Error code="55">procedure call of a function</Error>
    <Error code="56">assignment to non-variable</Error>
    <Error code="57">pointer not bound to record or array type</Error>
    <Error code="58">recursive type definition</Error>
    <Error code="59">illegal open array parameter</Error>
    <Error code="60">wrong type of case label</Error>
    <Error code="61">inadmissible type of case label</Error>
    <Error code="62">case label defined more than once</Error>
    <Error code="63">illegal value of constant</Error>
    <Error code="64">more actual than formal parameters</Error>
    <Error code="65">fewer actual than formal parameters</Error>
    <Error code="66">element types of actual array and formal open array differ</Error>
    <Error code="67">actual parameter corresponding to open array is not an array</Error>
    <Error code="68">control variable must be integer</Error>
    <Error code="69">parameter must be an integer constant</Error>
    <Error code="70">pointer or VAR record required as formal receiver</Error>
    <Error code="71">pointer expected as actual receiver</Error>
    <Error code="72">procedure must be bound to a record of the same scope</Error>
    <Error code="73">procedure must be of level 0</Error>
    <Error code="74">procedure unknown in base type</Error>
    <Error code="75">invalid call of base procedure</Error>
    <Error code="76">this variable (field) is read only</Error>
    <Error code="77">object is not a record</Error>
    <Error code="78">dereferenced object is not a variable</Error>
    <Error code="79">indexed object is not a variable</Error>
    <Error code="80">index expression is not an integer</Error>
    <Error code="81">index out of specified bounds</Error>
    <Error code="82">indexed variable is not an array</Error>
    <Error code="83">undefined record field</Error>
    <Error code="84">dereferenced variable is not a pointer</Error>
    <Error code="85">guard or test type is not an extension of variable type</Error>
    <Error code="86">guard or testtype is not a pointer</Error>
    <Error code="87">guarded or tested variable is neither a pointer nor a VAR-parameter record</Error>
    <Error code="88">open array not allowed as variable, record field or array element</Error>
    <Error code="89">open lower bound not bound to procedure parameter</Error>
    <Error code="90">semi-dynamic array not allowed in a record</Error>
    <Error code="91">open array not allowed as return type</Error>
    <Error code="92">operand of IN not an integer, or not a set</Error>
    <Error code="93">set element type is not an integer</Error>
    <Error code="94">operand of &#x3C; is not of type BOOLEAN</Error>
    <Error code="95">operand of OR is not of type BOOLEAN</Error>
    <Error code="96">operand not applicable to (unary) +</Error>
    <Error code="97">operand not applicable to (unary) -</Error>
    <Error code="98">operand of ~ is not of type BOOLEAN</Error>
    <Error code="99">ASSERT fault</Error>
    <Error code="100">incompatible operands of dyadic operator</Error>
    <Error code="101">operand type inapplicable to *</Error>
    <Error code="102">operand type inapplicable to /</Error>
    <Error code="103">operand type inapplicable to DIV</Error>
    <Error code="104">operand type inapplicable to MOD</Error>
    <Error code="105">operand type inapplicable to +</Error>
    <Error code="106">operand type inapplicable to -</Error>
    <Error code="107">operand type inapplicable to = or #</Error>
    <Error code="108">operand type inapplicable to relation</Error>
    <Error code="109">overriding method must be exported</Error>
    <Error code="110">operand is not a type</Error>
    <Error code="111">operand inapplicable to (this) function</Error>
    <Error code="112">operand is not a variable</Error>
    <Error code="113">incompatible assignment</Error>
    <Error code="114">string too long to be assigned</Error>
    <Error code="115">parameter does not match</Error>
    <Error code="116">number of parameters do not match</Error>
    <Error code="117">result type does not match</Error>
    <Error code="118">export mark does not match with forward declaration</Error>
    <Error code="119">redefinition textually precedes procedure bound to base type</Error>
    <Error code="120">type of expression following IF, WHILE, UNTIL or ASSERT is not BOOLEAN</Error>
    <Error code="121">called object is not a procedure (or is an interrupt procedure)</Error>
    <Error code="122">actual VAR-parameter is not a variable</Error>
    <Error code="123">type of actual parameter is not identical with that of formal VAR-parameter</Error>
    <Error code="124">type of result expression differs from that of procedure</Error>
    <Error code="125">type of case expression is neither INTEGER nor CHAR</Error>
    <Error code="126">this expression must not be a type or a procedure</Error>
    <Error code="127">illegal use of object</Error>
    <Error code="128">unsatisfied forward reference</Error>
    <Error code="129">unsatisfied forward procedure</Error>
    <Error code="130">WITH clause does not specify a variable</Error>
    <Error code="131">LEN not applied to array</Error>
    <Error code="132">dimension in LEN too large or negative</Error>
    <Error code="133">invalid context</Error>
    <Error code="134">initialiser can not return a value</Error>
    <Error code="135">SYSTEM not imported</Error>
    <Error code="136">recursive call of operator</Error>
    <Error code="137">operator not defined</Error>
    <Error code="138">VAR-parameter not allowed</Error>
    <Error code="139">multiply-defined operator</Error>
    <Error code="140">operator not allowed in record scope</Error>
    <Error code="141">operator type missing</Error>
    <Error code="142">name does not denote an operator</Error>
    <Error code="143">invalid number of formal parameters</Error>
    <Error code="144">only one initializer allowed in a record</Error>
    <Error code="145">forward declaration not allowed</Error>
    <Error code="146">operator must use one locally declared argument type</Error>
    <Error code="147">:= operator: cannot be a function</Error>
    <Error code="148">:= operator: first parameter must be VAR</Error>
    <Error code="149"></Error>
    <Error code="150">key inconsistency of imported module</Error>
    <Error code="151">incorrect symbol file</Error>
    <Error code="152">symbol file of imported module not found</Error>
    <Error code="153">object or symbol file not opened (disk full?)</Error>
    <Error code="154">recursive import not allowed</Error>
    <Error code="155">generation of new symbol file not allowed</Error>
    <Error code="156"></Error>
    <Error code="157"></Error>
    <Error code="158"></Error>
    <Error code="159"></Error>
    <Error code="160">non-realtime procedure call or NEW not allowed in scope of realtime procedure</Error>
    <Error code="161">incompatible types - realtime properties do not match</Error>
    <Error code="162">EXCLUSIVE or AWAIT not allowed in scope of realtime procedure</Error>
    <Error code="163">Overridden method is not a realtime method</Error>
    <Error code="164"></Error>
    <Error code="165"></Error>
    <Error code="166"></Error>
    <Error code="167"></Error>
    <Error code="168"></Error>
    <Error code="169"></Error>
    <Error code="170">incompatible assignment (declare the record as POINTER TO RECORD)</Error>
    <Error code="171"></Error>
    <Error code="172"></Error>
    <Error code="173"></Error>
    <Error code="174"></Error>
    <Error code="175">this procedure type cannot be used with GETPROCEDURE</Error>
    <Error code="176"></Error>
    <Error code="177"></Error>
    <Error code="178"></Error>
    <Error code="179"></Error>
    <Error code="180"></Error>
    <Error code="181"></Error>
    <Error code="182"></Error>
    <Error code="183"></Error>
    <Error code="184"></Error>
    <Error code="185"></Error>
    <Error code="186"></Error>
    <Error code="187"></Error>
    <Error code="188"></Error>
    <Error code="189"></Error>
    <Error code="190"></Error>
    <Error code="191"></Error>
    <Error code="192"></Error>
    <Error code="193"></Error>
    <Error code="194"></Error>
    <Error code="195"></Error>
    <Error code="196"></Error>
    <Error code="197"></Error>
    <Error code="198"></Error>
    <Error code="199"></Error>
    <Error code="200">not yet implemented</Error>
    <Error code="201">lower bound of set range greater than higher bound</Error>
    <Error code="202">set element greater than MAX(SET) or less than 0</Error>
    <Error code="203">number too large</Error>
    <Error code="204">product too large</Error>
    <Error code="205">division by zero</Error>
    <Error code="206">sum too large</Error>
    <Error code="207">difference too large</Error>
    <Error code="208">overflow in arithmetic shift</Error>
    <Error code="209">case range too large</Error>
    <Error code="210">code too long ( > 64 KB)</Error>
    <Error code="211">procedure too large (reduce procedure size)</Error>
    <Error code="212">operator should precede procedure declaration</Error>
    <Error code="213">too many cases in case statement</Error>
    <Error code="214"></Error>
    <Error code="215">not enough registers: simplify expression</Error>
    <Error code="216">not enough floating-point registers: simplify expression</Error>
    <Error code="217"></Error>
    <Error code="218">illegal value of parameter  "(20 &#60;= p &#60; 256)"</Error>
    <Error code="219">illegal value of parameter  "(0 &#60;= p &#60; 16)"</Error>
    <Error code="220">illegal value of parameter</Error>
    <Error code="221">too many pointers in a record</Error>
    <Error code="222">too many global pointers</Error>
    <Error code="223">too many record types</Error>
    <Error code="224">too many pointer types</Error>
    <Error code="225">address of pointer variable too large (move forward in text)</Error>
    <Error code="226">too many exported and/or type-bound procedures</Error>
    <Error code="227">too many imported modules</Error>
    <Error code="228">too many exported structures</Error>
    <Error code="229">too many nested records for import</Error>
    <Error code="230">too many constants (strings) in module</Error>
    <Error code="231">too many external and/or type-bound procedures</Error>
    <Error code="232">too many commands in module</Error>
    <Error code="233">record extension hierarchy too high</Error>
    <Error code="234">export of recursive type not allowed</Error>
    <Error code="235">too many accesses to global variables or constants</Error>
    <Error code="236">too many exported variables</Error>
    <Error code="237">procedure flag no longer supported</Error>
    <Error code="238">forward declarations no longer supported</Error>
    <Error code="239"></Error>
    <Error code="240">identifier too long</Error>
    <Error code="241">string too long</Error>
    <Error code="242">address overflow</Error>
    <Error code="243">too many imported variables</Error>
    <Error code="244"></Error>
    <Error code="245"></Error>
    <Error code="246">already inside an exclusive statement block</Error>
    <Error code="247">local variables not allowed in inlined assembler procedure</Error>
    <Error code="248">PASSIVATE with global condition</Error>
    <Error code="249">only allowed for POINTER TO RECORDs</Error>
    <Error code="250">inlined oberon procedures can not be exported</Error>
    <Error code="251">too many nested function calls</Error>
    <Error code="252">pointer to this record required</Error>
    <Error code="253">initialiser must belong to a record</Error>
    <Error code="254">can not define a static instance of an active object</Error>
    <Error code="255"></Error>
    <Error code="256"></Error>
    <Error code="257"></Error>
    <Error code="258"></Error>
    <Error code="259"></Error>
    <Error code="260">Active Oberon forward reference</Error>
    <Error code="261">Active Oberon method</Error>
    <Error code="262">Active Oberon relaxed declaration order</Error>
    <Error code="263"></Error>
    <Error code="264"></Error>
    <Error code="265"></Error>
    <Error code="266"></Error>
    <Error code="267"></Error>
    <Error code="268"></Error>
    <Error code="269"></Error>
    <Error code="270">Oberon X structured return type</Error>
    <Error code="271">Oberon X array</Error>
    <Error code="272">allowed only in active objects</Error>
    <Error code="273"></Error>
    <Error code="274"></Error>
    <Error code="275"></Error>
    <Error code="276"></Error>
    <Error code="277"></Error>
    <Error code="278"></Error>
    <Error code="279"></Error>
    <Error code="280">duplicate fingerprint</Error>
    <Error code="290">interface not implemented</Error>
    
<!-- Debug Positions -->
    <Error code="400">pc position</Error>

<!-- Symbolfile Information -->
	<Error code="401">is no longer visible</Error>
	<Error code="402">is redefined</Error>
	<Error code="403">is new</Error>
    
<!-- Compiler Warnings -->
	<Error code="301">implicit type cast</Error>
	<Error code="302">guarded variable can be side-effected</Error>
	<Error code="303">SYSTEM.PTR var parameter output-only</Error>
	<Error code="304">SYSTEM.VAL size mismatch</Error>
	<Error code="305">only open arrays and named types can be used</Error>
	<Error code="306">possible size mismatch</Error>
	<Error code="310">ambigous operator</Error>
	<Error code="311">dynamic array deep copy</Error>
	<Error code="312">implicit reference to heap object via VAR</Error>
	<Error code="313">no RETURN in function</Error>
	<Error code="314">AWAIT statement not in EXCLUSIVE block</Error>
	<Error code="315">Empty statement or multiple termination</Error>

<!-- incorrect use of i80386 Assembly Language -->	
	<Error code="500">undeclared identifier</Error>
	<Error code="501">addressing mode not allowed</Error>
	<Error code="502">undefined instruction</Error>
	<Error code="503">number to large</Error>
	<Error code="504">max one segment override allowed</Error>
	<Error code="505">register expected</Error>
	<Error code="506">32-Bit register expected</Error>
	<Error code="507">"[" expected</Error>
	<Error code="508">scale factor expected (2, 4, 8)</Error>
	<Error code="509">index already defined</Error>
	<Error code="510">Carriage Return expected</Error>
	<Error code="511">Operand missing</Error>
	<Error code="512">Undefined operand size</Error>
	<Error code="513">string expected</Error>
	<Error code="514">Object Type not supported</Error>
	<Error code="515">Instruction not supported on target</Error>
	<Error code="516">no target specified</Error>
	<Error code="517">access to non-local variables not allowed in exported inlined procedure</Error>
	<Error code="518">inlined procedure: procedure activation frame does not exist</Error>

<!-- incorrect use of AMD64 Assembly Language -->	
	<Error code="550">target specifier exptected</Error>
	<Error code="551">identifier expected</Error>
	<Error code="552">unsupported target specifier</Error>
	<Error code="553">invalid segment size</Error>
	<Error code="554">undefined symbol</Error>
	<Error code="555">parse error in expression</Error>
	<Error code="556">invalid effective address</Error>
	<Error code="557">invalid combination of opcode and operands</Error>
	<Error code="558">invalid instruction for current target</Error>
	<Error code="559">value exceeds bounds</Error>
	<Error code="560">invalid use of symbol</Error>
	<Error code="561">negative TIMES value</Error>
	<Error code="562">invalid register size specification</Error>
	
<!-- Analyzer Warnings -->
	<Error code="900">never used</Error>
	<Error code="901">never set</Error>
	<Error code="902">used before set</Error>
	<Error code="903">set but never used</Error>
	<Error code="904">used as varpar, possibly not set</Error>
	<Error code="905">also declared in outer scope</Error>
	<Error code="906">access/assignment to intermediate</Error>
	<Error code="907">redefinition</Error>
	<Error code="908">new definition</Error>
	<Error code="909">statement after RETURN/EXIT</Error>
	<Error code="910">for loop variable set</Error>
	<Error code="911">implied type guard in record assignment</Error>
	<Error code="912">call might depend on evaluation sequence of params</Error>
	<Error code="913">parameter never used</Error>
	<Error code="914">has same name as inherited field</Error>
	<Error code="915">exported but not visible outside module</Error>
	<Error code="916">empty formal parameter list</Error>
	<Error code="917">parameter not modified: prefer CONST parameter</Error>
	<Error code="918">unnecessary parentheses in procedure call</Error>
</Errors>
